plugins {
    id 'com.android.application'
    id 'kotlin-android'

    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'

    id 'com.google.secrets_gradle_plugin' version '0.4'

    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream("local.properties"))

    signingConfigs {
        debug {
            storeFile file('C:\\Users\\SharafElDinA\\AndroidStudioProjects\\Weather-Forecast\\app\\keyStore\\PlayConsoleKey.jks')
            storePassword localProperties['STORE_PASSWORD']
            keyAlias localProperties['KEY_ALIAS']
            keyPassword localProperties['STORE_PASSWORD']
        }
    }

    compileSdk 33

    defaultConfig {
        applicationId "com.ahmdalii.weatherforecast"
        minSdk 23
        targetSdk 33
        versionCode 7
        versionName "1.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        signingConfig signingConfigs.debug

        // NAME APK
        var timeStamp = new Date().format('yyyy.MM.dd_HHmm')
        setProperty("archivesBaseName", "${applicationId}-v${versionName}(${versionCode}) date=${timeStamp}")

        // Sets up parameters for both jni build and cmake.
        // For a complete list of parameters,
        // see developer.android.com/ndk/guides/cmake.html#variables
        externalNativeBuild {
            cmake {
                // cppFlags are configured according to your selection of
                //    "Customize C++ Support", in this codelab's
                //    "Create a Sample App with the C++ Template",
                //    step 6
                cppFlags '-std=c++17'
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug

            resValue("string", "GOOGLE_MAPS_API_KEY", localProperties['GOOGLE_MAPS_API_KEY'])
            resValue("string", "ADS_APP_ID", localProperties['ADS_APP_ID'])
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

            resValue("string", "GOOGLE_MAPS_API_KEY", localProperties['GOOGLE_MAPS_API_KEY'])
            resValue("string", "ADS_APP_ID", localProperties['ADS_APP_ID'])
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // Specifies the location of the top level CMakeLists.txt
    // The path is relative to the hosting directory of this build.gradle file
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Navigation Component
    def nav_version = "2.4.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Lifecycle & ViewModel
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    /*implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")*/

    // Room
    def room_version = "2.4.2"
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    kapt("androidx.room:room-compiler:$room_version")                   // To use Kotlin annotation processing tool (kapt)
    implementation("androidx.room:room-ktx:$room_version")              // optional - Kotlin Extensions and Coroutines support for Room

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // okHTTP
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.3"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Glide
    def glide_version = "4.13.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // for datetime
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.0'

    // location
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.libraries.places:places:2.6.0'

    def lottie_version = "5.0.3" // 3.7.2
    implementation "com.airbnb.android:lottie:$lottie_version"

    implementation "androidx.work:work-runtime-ktx:2.7.1"

    // ads
    implementation 'com.google.android.gms:play-services-ads:21.1.0'

    // firebase (analytics and crashlytics)
    implementation platform('com.google.firebase:firebase-bom:30.3.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
}